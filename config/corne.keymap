/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/ {
	behaviors {
		td_space: tap_dance_0 {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_0";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&lt 1 SPACE>, <&kp ENTER>
		};
	};
	behaviors {
		td_dash: tap_dance_1 {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_1";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&mt RGUI UNDERSCORE>, <&kp MINUS>, <&kp EQUAL>
		};
	};

/ {
	macros {
		ctrl_space: ctrl_space {
			label = "ctrl_space";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp SPACE>
				, <&macro_release &kp LCTRL>
				;
		};
		shift_tab: shift_tab {
			label = "shift_tab";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LSHFT>
				, <&macro_tap &kp TAB>
				, <&macro_release &kp LSHFT>
				;
		};
		gui_ctrl: gui_ctrl{
			label = "gui_ctrl";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LCTRL &kp LGUI>
				, <&macro_pause_for_release>
				, <&macro_release &kp LCTRL &kp LGUI>
				;
		};
		gui_alt: gui_alt{
			label = "gui_alt";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LALT &kp LGUI>
				, <&macro_pause_for_release>
				, <&macro_release &kp LALT &kp LGUI>
				;
		};
		meh: meh{
			label = "meh";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LALT &kp LSHFT &kp LCTRL>
				, <&macro_pause_for_release>
				, <&macro_release &kp LALT &kp LSHFT &kp LCTRL>
				;
		};
	}; 
};

/ {
    combos {
			compatible = "zmk,combos";
			combo_shift_tab {
				timeout-ms = <50>;
				key-positions = <0 1>;
				bindings = <&shift_tab>;
			};
			combo_zero {
				timeout-ms = <50>;
				key-positions = <9 10>;
				bindings = <&kp N0>;
			};
			combo_one {
				timeout-ms = <50>;
				key-positions = <12 1>;
				bindings = <&kp N1>;
			};
			combo_two {
				timeout-ms = <50>;
				key-positions = <1 2>;
				bindings = <&kp N2>;
			};
			combo_three {
				timeout-ms = <50>;
				key-positions = <2 3>;
				bindings = <&kp N3>;
			};
			combo_four {
				timeout-ms = <50>;
				key-positions = <3 4>;
				bindings = <&kp N4>;
			};
			combo_five {
				timeout-ms = <50>;
				key-positions = <4 5>;
				bindings = <&kp N5>;
			};
			combo_lgui {
				timeout-ms = <50>;
				key-positions = <25 26>;
				bindings = <&kp LGUI>;
			};
			combo_lctl {
				timeout-ms = <50>;
				key-positions = <25 27>;
				bindings = <&kp LCTRL>;
			};
			combo_lalt {
				timeout-ms = <50>;
				key-positions = <25 28>;
				bindings = <&kp LALT>;
			};
			combo_rgui {
				timeout-ms = <50>;
				key-positions = <33 34>;
				bindings = <&kp RGUI>;
			};
			combo_rctl {
				timeout-ms = <50>;
				key-positions = <32 34>;
				bindings = <&kp RCTRL>;
			};
			combo_ralt {
				timeout-ms = <50>;
				key-positions = <31 34>;
				bindings = <&kp RALT>;
			};
			combo_lgui_ctrl {
				timeout-ms = <50>;
				key-positions = <25 26 27>;
				bindings = <&gui_ctrl>;
			};
			combo_lgui_alt {
				timeout-ms = <50>;
				key-positions = <25 26 28>;
				bindings = <&gui_alt>;
			};
			combo_rgui_ctrl {
				timeout-ms = <50>;
				key-positions = <32 33 34>;
				bindings = <&gui_ctrl>;
			};
			combo_rgui_alt {
				timeout-ms = <50>;
				key-positions = <31 33 34>;
				bindings = <&gui_alt>;
			};
			combo_pgdn {
				timeout-ms = <50>;
				key-positions = <21 22>;
				bindings = <&kp PG_DN>;
			};
			combo_pgup {
				timeout-ms = <50>;
				key-positions = <10 23>;
				bindings = <&kp PG_UP>;
			};
			combo_dash {
				timeout-ms = <50>;
				key-positions = <15 16>;
				bindings = <&kp MINUS>;
			};
			combo_equal {
				timeout-ms = <50>;
				key-positions = <14 15>;
				bindings = <&kp EQUAL>;
			};
			combo_lctrl_space {
				timeout-ms = <50>;
				key-positions = <13 14>;
				bindings = <&ctrl_space>;
			};
			combo_down {
				timeout-ms = <50>;
				key-positions = <19 20>;
				bindings = <&kp DOWN>;
			};
			combo_right {
				timeout-ms = <50>;
				key-positions = <20 21>;
				bindings = <&kp RIGHT>;
			};
			combo_left {
				timeout-ms = <50>;
				key-positions = <18 19>;
				bindings = <&kp LEFT>;
			};
			combo_up {
				timeout-ms = <50>;
				key-positions = <7 8>;
				bindings = <&kp UP>;
			};
			combo_home {
				timeout-ms = <50>;
				key-positions = <6 7>;
				bindings = <&kp HOME>;
			};
			combo_end {
				timeout-ms = <50>;
				key-positions = <8 9>;
				bindings = <&kp END>;
			};
			combo_lshift {
				timeout-ms = <50>;
				key-positions = <26 28>;
				bindings = <&kp LSHFT>;
			};
			combo_rshift {
				timeout-ms = <50>;
				key-positions = <31 33>;
				bindings = <&kp RSHFT>;
			};
			combo_rmeh{
				timeout-ms = <50>;
				key-positions = <31 32 33>;
				bindings = <&meh>;
			};
			combo_lmeh{
				timeout-ms = <50>;
				key-positions = <26 27 28>;
				bindings = <&meh>;
			};
    };
};
/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// -----------------------------------------------------------------------------------------
// | ALT TAB |  Q  |  W  |  E  |  R   |  T     |   |  Y      |  U   |  I   |  O  |  P  |  _    |
// | CTRL ESC|  A  |  S  |  D  |  F   |  G     |   |  H      |  J   |  K   |  L  | ;| ' |
// | SHFT `  |  Z  |  X  |  C  |  V   |  B     |   |  N      |  M   |  ,   |  .  |  /  |SFT ENT|
//                       | CTRL [| CGUI Enter|L2 BKSP |   |L1 SPACE |GUI _  | ALT ]|
			bindings = <
   &mt LALT TAB    &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P          &kp BKSP
   &mt LCTRL ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI       &kp SQT
   &mt LSHFT GRAVE &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH       &mt RSHFT ENTER
		&mt LCTRL LBKT &mt LGUI ENTER &lt 2 BKSP  &td_space &td_dash &mt RALT RBKT
			>;
		};
		right_layer {
// -----------------------------------------------------------------------------------------
// | 0 |  1  |  2  |  3  |  4  |  5   |   |  6  |  7  |  8  |  9  |  0  | PGUP |
// |   | F1  | F2  | F3  | F4  | F5   |   | ^   | &   | *   | (   |  )  | PGDN |
// |   | F11 | F12 | F13 | F14 | F15  |   | LFT | DWN | UP  | RGT | HOME| END  |
//                 |     |     |L2 Del|   |     |     |     |
			bindings = <
   &kp N0    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5          &kp N6    &kp N7       &kp N8    &kp N9     &kp N0    &kp PG_UP
   &trans    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5          &kp CARET &kp AMPS     &kp STAR  &kp LPAR   &kp RPAR  &kp PG_DN 
   &trans    &kp F11      &kp F12      &kp F13      &kp F14      &kp F15         &kp LEFT  &kp DOWN     &kp UP    &kp RIGHT  &kp HOME  &kp END 
				       &trans       &trans       &lt 3 DEL       &trans    &trans       &trans
			>;
		};

		left_layer {
// -----------------------------------------------------------------------------------------
// |0 |  1  | 2   |  3  |  4  |  5  |   |  6  |   7  |   8  |   9  |  0    |  
// | \|  !  |  @  |  #  |  $  |  %  |   | F6  |  F7  |  F8  |  F9  |  F10  |  |  
// |  | '|' |  +  |  ~  |  {  |  }  |   |     |      |      |      |       |  |  
//                |     |     |     |   | L2 ENT  |     |      |
			bindings = <
   &kp N0  &kp N1   &kp N2   &kp N3       &kp N4        &kp N5       &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &trans
   &trans  &kp EXCL &kp AT   &kp HASH     &kp DLLR      &kp PERCENT    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10  &trans
   &kp BSLH    &kp PIPE &kp PLUS &kp TILDE    &kp LBRC      &kp RBRC     &none     &none     &none   &none     &none    &trans
			       &trans       &trans        &trans       &lt 3 ENTER &trans    &trans
			>;
		};

		macro_layer {
// -----------------------------------------------------------------------------------------
// | BT 0| BT 1| BT 2 | BT 3 | BT 4 |   |  ^  |  &   |  *   |  (   |  )    |  |  
// |     |     |     |     |     |     |   |     |      |      |      |       |  |  
// |BTCLR|     |     |     |     |     |   |     |      |      |      |       |  |  
//             |     |     |     |     |   |     |      |
			bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4 &none        &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
   &trans     &none     &none    &none      &none      &none        &none     &none    &none      &none      &none    &trans
   &bt BT_CLR     &none     &none    &none      &none      &none        &none     &none    &none      &none      &none    &trans
			&trans   &trans     &trans     &trans       &trans    &trans
			>;
		};
	};
};
